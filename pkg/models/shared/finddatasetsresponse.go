// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// FindDatasetsResponsePurposeEnum - This is the purpose of the dataset.
type FindDatasetsResponsePurposeEnum string

const (
	FindDatasetsResponsePurposeEnumTraining   FindDatasetsResponsePurposeEnum = "Training"
	FindDatasetsResponsePurposeEnumValidation FindDatasetsResponsePurposeEnum = "Validation"
	FindDatasetsResponsePurposeEnumTest       FindDatasetsResponsePurposeEnum = "Test"
)

func (e *FindDatasetsResponsePurposeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Training":
		fallthrough
	case "Validation":
		fallthrough
	case "Test":
		*e = FindDatasetsResponsePurposeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for FindDatasetsResponsePurposeEnum: %s", s)
	}
}

// FindDatasetsResponse - Successful response
type FindDatasetsResponse struct {
	Bytes     *string `json:"bytes,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	// description of the dataset
	Description *string `json:"description,omitempty"`
	// prompt of the dataset
	FileName *string `json:"file_name,omitempty"`
	// id of the dataset
	ID *string `json:"id,omitempty"`
	// data object associated with the dataset
	Object *string `json:"object,omitempty"`
	// This is the purpose of the dataset.
	Purpose *FindDatasetsResponsePurposeEnum `json:"purpose,omitempty"`
}
