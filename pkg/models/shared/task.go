// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TaskTypeEnum string

const (
	TaskTypeEnumTextGeneration TaskTypeEnum = "Text Generation"
	TaskTypeEnumCodeGeneration TaskTypeEnum = "Code Generation"
	TaskTypeEnumClassification TaskTypeEnum = "Classification"
	TaskTypeEnumSummarization  TaskTypeEnum = "Summarization"
	TaskTypeEnumOther          TaskTypeEnum = "Other"
)

func (e *TaskTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Text Generation":
		fallthrough
	case "Code Generation":
		fallthrough
	case "Classification":
		fallthrough
	case "Summarization":
		fallthrough
	case "Other":
		*e = TaskTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TaskTypeEnum: %s", s)
	}
}

// Task - Task payload
type Task struct {
	CreatedAt       *string       `json:"created_at,omitempty"`
	Datasets        []Dataset     `json:"datasets,omitempty"`
	Description     *string       `json:"description,omitempty"`
	FineTunedModels []string      `json:"fine_tuned_models,omitempty"`
	ID              *string       `json:"id,omitempty"`
	Metrics         []Metric      `json:"metrics,omitempty"`
	Name            *string       `json:"name,omitempty"`
	Prompts         []Prompt      `json:"prompts,omitempty"`
	Type            *TaskTypeEnum `json:"type,omitempty"`
	UpdatedAt       *string       `json:"updated_at,omitempty"`
}
